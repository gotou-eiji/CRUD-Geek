<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>